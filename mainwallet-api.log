2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationFactory.parseConfiguration(150) | Configuring ehcache from InputStream
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.BeanHandler.setAttribute(271) | Ignoring ehcache attribute xmlns:xsi
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.BeanHandler.setAttribute(271) | Ignoring ehcache attribute xsi:noNamespaceSchemaLocation
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.DiskStoreConfiguration.translatePath(141) | Disk Store Path: cache/session
2013-06-26 17:54:13 DEBUG net.sf.ehcache.util.PropertyUtil.parseProperties(87) | propertiesString is null.
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createCacheManagerEventListener(185) | No CacheManagerEventListenerFactory class specified. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.createBootstrapCacheLoader(1001) | No BootstrapCacheLoaderFactory class specified. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.createCacheWriter(975) | CacheWriter factory not configured. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createCacheExceptionHandler(96) | No CacheExceptionHandlerFactory class specified. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.createBootstrapCacheLoader(1001) | No BootstrapCacheLoaderFactory class specified. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.createCacheWriter(975) | CacheWriter factory not configured. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createCacheExceptionHandler(96) | No CacheExceptionHandlerFactory class specified. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.createBootstrapCacheLoader(1001) | No BootstrapCacheLoaderFactory class specified. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.createCacheWriter(975) | CacheWriter factory not configured. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createCacheExceptionHandler(96) | No CacheExceptionHandlerFactory class specified. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.createBootstrapCacheLoader(1001) | No BootstrapCacheLoaderFactory class specified. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.createCacheWriter(975) | CacheWriter factory not configured. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createCacheExceptionHandler(96) | No CacheExceptionHandlerFactory class specified. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.createBootstrapCacheLoader(1001) | No BootstrapCacheLoaderFactory class specified. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.createCacheWriter(975) | CacheWriter factory not configured. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createCacheExceptionHandler(96) | No CacheExceptionHandlerFactory class specified. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.createBootstrapCacheLoader(1001) | No BootstrapCacheLoaderFactory class specified. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.createCacheWriter(975) | CacheWriter factory not configured. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createCacheExceptionHandler(96) | No CacheExceptionHandlerFactory class specified. Skipping...
2013-06-26 17:54:13 DEBUG net.sf.ehcache.store.MemoryStore.<init>(206) | Initialized net.sf.ehcache.store.NotifyingMemoryStore for getGameCode
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE_BYTES
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_DISK_SIZE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_DISK_SIZE_BYTES
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: WRITER_QUEUE_LENGTH
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: REMOTE_SIZE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_GET
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_PUT
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_REMOVE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: DISK_GET
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: DISK_PUT
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: DISK_REMOVE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_COMMIT
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_ROLLBACK
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_RECOVERY
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.initialise(1207) | Initialised cache: getGameCode
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createCacheDecorators(325) | CacheDecoratorFactory not configured. Skipping for 'getGameCode'.
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createDefaultCacheDecorators(354) | CacheDecoratorFactory not configured for defaultCache. Skipping for 'getGameCode'.
2013-06-26 17:54:13 DEBUG net.sf.ehcache.store.MemoryStore.<init>(206) | Initialized net.sf.ehcache.store.NotifyingMemoryStore for getClient
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE_BYTES
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_DISK_SIZE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_DISK_SIZE_BYTES
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: WRITER_QUEUE_LENGTH
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: REMOTE_SIZE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_GET
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_PUT
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_REMOVE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: DISK_GET
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: DISK_PUT
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: DISK_REMOVE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_COMMIT
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_ROLLBACK
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_RECOVERY
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.initialise(1207) | Initialised cache: getClient
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createCacheDecorators(325) | CacheDecoratorFactory not configured. Skipping for 'getClient'.
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createDefaultCacheDecorators(354) | CacheDecoratorFactory not configured for defaultCache. Skipping for 'getClient'.
2013-06-26 17:54:13 DEBUG net.sf.ehcache.DiskStorePathManager.resolveAndLockIfNeeded(169) | Using diskstore path cache/session
2013-06-26 17:54:13 DEBUG net.sf.ehcache.DiskStorePathManager.resolveAndLockIfNeeded(170) | Holding exclusive lock on /project/erlang/Ecrawler/cache/session/.ehcache-diskstore.lock
2013-06-26 17:54:13 DEBUG net.sf.ehcache.store.disk.DiskStorageFactory.deleteFile(834) | Failed to delete file session.data
2013-06-26 17:54:13 DEBUG net.sf.ehcache.store.disk.DiskStorageFactory.deleteFile(834) | Failed to delete file session.index
2013-06-26 17:54:13 DEBUG net.sf.ehcache.store.disk.DiskStorageFactory.<init>(166) | Matching data file missing (or empty) for index file. Deleting index file cache/session/session.index
2013-06-26 17:54:13 DEBUG net.sf.ehcache.store.disk.DiskStorageFactory.deleteFile(834) | Failed to delete file session.index
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE_BYTES
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: WRITER_QUEUE_LENGTH
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: REMOTE_SIZE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_GET
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_PUT
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_REMOVE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_COMMIT
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_ROLLBACK
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_RECOVERY
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.initialise(1207) | Initialised cache: session
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createCacheDecorators(325) | CacheDecoratorFactory not configured. Skipping for 'session'.
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createDefaultCacheDecorators(354) | CacheDecoratorFactory not configured for defaultCache. Skipping for 'session'.
2013-06-26 17:54:13 DEBUG net.sf.ehcache.store.MemoryStore.<init>(206) | Initialized net.sf.ehcache.store.NotifyingMemoryStore for getExchangeRate
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE_BYTES
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_DISK_SIZE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_DISK_SIZE_BYTES
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: WRITER_QUEUE_LENGTH
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: REMOTE_SIZE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_GET
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_PUT
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_REMOVE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: DISK_GET
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: DISK_PUT
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: DISK_REMOVE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_COMMIT
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_ROLLBACK
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_RECOVERY
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.initialise(1207) | Initialised cache: getExchangeRate
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createCacheDecorators(325) | CacheDecoratorFactory not configured. Skipping for 'getExchangeRate'.
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createDefaultCacheDecorators(354) | CacheDecoratorFactory not configured for defaultCache. Skipping for 'getExchangeRate'.
2013-06-26 17:54:13 DEBUG net.sf.ehcache.store.MemoryStore.<init>(206) | Initialized net.sf.ehcache.store.NotifyingMemoryStore for getCurrency
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE_BYTES
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_DISK_SIZE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: LOCAL_DISK_SIZE_BYTES
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: WRITER_QUEUE_LENGTH
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardPassThruStatistics(169) | Mocking Pass-Through Statistic: REMOTE_SIZE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_GET
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_PUT
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: OFFHEAP_REMOVE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: DISK_GET
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: DISK_PUT
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: DISK_REMOVE
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_COMMIT
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_ROLLBACK
2013-06-26 17:54:13 DEBUG net.sf.ehcache.statistics.extended.ExtendedStatisticsImpl.findStandardOperationStatistics(155) | Mocking Operation Statistic: XA_RECOVERY
2013-06-26 17:54:13 DEBUG net.sf.ehcache.Cache.initialise(1207) | Initialised cache: getCurrency
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createCacheDecorators(325) | CacheDecoratorFactory not configured. Skipping for 'getCurrency'.
2013-06-26 17:54:13 DEBUG net.sf.ehcache.config.ConfigurationHelper.createDefaultCacheDecorators(354) | CacheDecoratorFactory not configured for defaultCache. Skipping for 'getCurrency'.
2013-06-26 17:54:13 INFO com.ts.service.PasswrodEncryption.decryptFactory(33) | encrypted DB password:UcmJbNpoSH3pfXMCNCUh6g==
2013-06-26 17:54:13 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Scanned package: 'com.ts.domain' for aliases
2013-06-26 17:54:13 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Parsed configuration file: 'class path resource [com/ts/dao/Mybatis-config.xml]'
2013-06-26 17:54:14 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Property 'mapperLocations' was not specified or no matching resources found
2013-06-26 17:54:14 DEBUG org.hibernate.validator.internal.util.logging.LoggerFactory.make(28) | Logging Provider: org.jboss.logging.Log4jLoggerProvider
2013-06-26 17:54:14 INFO org.hibernate.validator.internal.util.Version.<clinit>(27) | HV000001: Hibernate Validator 4.3.1.Final
2013-06-26 17:54:14 DEBUG org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver.detectJPA(74) | Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2013-06-26 17:54:14 DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl.messageInterpolator(111) | Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2013-06-26 17:54:14 DEBUG org.hibernate.validator.internal.engine.ConfigurationImpl.constraintValidatorFactory(131) | Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2013-06-26 17:54:14 DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(184) | Trying to load META-INF/validation.xml for XML based Validator configuration.
2013-06-26 17:54:14 DEBUG org.hibernate.validator.internal.xml.ValidationXmlParser.getValidationConfig(187) | No META-INF/validation.xml found. Using annotation based configuration only.
2013-06-26 17:54:14 DEBUG com.googlecode.ehcache.annotations.impl.CacheAttributeSourceImpl.getMethodAttribute(230) | Adding CACHE advised method 'getClient' with attribute: CacheableAttributeImpl [cacheInstanceResolver=com.googlecode.ehcache.annotations.resolver.SingletonCacheableCacheResolver@3bbfc832, cacheKeyGenerator=HashCodeCacheKeyGenerator [includeMethod=true, includeParameterTypes=true, useReflection=false, checkforCycles=false], parameterMask=ParameterMask [mask=[]], cacheNull=true, cacheInterceptor=com.googlecode.ehcache.annotations.DefaultCacheableInterceptor@2bf06943]
2013-06-26 17:54:15 DEBUG com.googlecode.ehcache.annotations.impl.CacheAttributeSourceImpl.getMethodAttribute(230) | Adding CACHE advised method 'getExchangeRate' with attribute: CacheableAttributeImpl [cacheInstanceResolver=com.googlecode.ehcache.annotations.resolver.SingletonCacheableCacheResolver@29a190ff, cacheKeyGenerator=HashCodeCacheKeyGenerator [includeMethod=true, includeParameterTypes=true, useReflection=false, checkforCycles=false], parameterMask=ParameterMask [mask=[]], cacheNull=true, cacheInterceptor=com.googlecode.ehcache.annotations.DefaultCacheableInterceptor@2bf06943]
2013-06-26 17:54:15 DEBUG com.googlecode.ehcache.annotations.impl.CacheAttributeSourceImpl.getMethodAttribute(230) | Adding CACHE advised method 'isValidGameCode' with attribute: CacheableAttributeImpl [cacheInstanceResolver=com.googlecode.ehcache.annotations.resolver.SingletonCacheableCacheResolver@76972578, cacheKeyGenerator=HashCodeCacheKeyGenerator [includeMethod=true, includeParameterTypes=true, useReflection=false, checkforCycles=false], parameterMask=ParameterMask [mask=[]], cacheNull=true, cacheInterceptor=com.googlecode.ehcache.annotations.DefaultCacheableInterceptor@2bf06943]
2013-06-26 17:54:15 DEBUG com.googlecode.ehcache.annotations.impl.CacheAttributeSourceImpl.getMethodAttribute(230) | Adding CACHE advised method 'getCurrencyByName' with attribute: CacheableAttributeImpl [cacheInstanceResolver=com.googlecode.ehcache.annotations.resolver.SingletonCacheableCacheResolver@44b0d5f5, cacheKeyGenerator=HashCodeCacheKeyGenerator [includeMethod=true, includeParameterTypes=true, useReflection=false, checkforCycles=false], parameterMask=ParameterMask [mask=[]], cacheNull=true, cacheInterceptor=com.googlecode.ehcache.annotations.DefaultCacheableInterceptor@2bf06943]
2013-06-26 17:56:09 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 17:56:09 INFO com.ts.web.CacheService.getClient(46) | get client from db forCSN
2013-06-26 17:56:09 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Creating a new SqlSession
2013-06-26 17:56:09 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f1edb4e]
2013-06-26 17:56:09 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | JDBC Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver] will be managed by Spring
2013-06-26 17:56:09 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ooo Using Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver]
2013-06-26 17:56:09 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==>  Preparing: select `id`, `name`, `group`, `identity`, `secret`, `status` from wallet_client where identity=? and secret=?; 
2013-06-26 17:56:09 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==> Parameters: CSN(String), 123456(String)
2013-06-26 17:56:09 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f1edb4e]
2013-06-26 17:56:09 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f1edb4e]
2013-06-26 17:56:09 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f1edb4e]
2013-06-26 17:56:10 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 17:56:10 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 17:56:10 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Creating a new SqlSession
2013-06-26 17:56:10 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6055fc3f] was not registered for synchronization because synchronization is not active
2013-06-26 17:56:10 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | JDBC Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver] will not be managed by Spring
2013-06-26 17:56:10 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ooo Using Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver]
2013-06-26 17:56:10 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==>  Preparing: select id, name from currency where name=? 
2013-06-26 17:56:10 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==> Parameters: RMB(String)
2013-06-26 17:56:10 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6055fc3f]
2013-06-26 18:00:26 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:00:26 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:00:26 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:04:57 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:04:57 INFO com.ts.web.CacheService.getClient(46) | get client from db forCSN
2013-06-26 18:04:57 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Creating a new SqlSession
2013-06-26 18:04:57 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c84b7c4]
2013-06-26 18:04:57 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | JDBC Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver] will be managed by Spring
2013-06-26 18:04:57 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ooo Using Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver]
2013-06-26 18:04:57 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==>  Preparing: select `id`, `name`, `group`, `identity`, `secret`, `status` from wallet_client where identity=? and secret=?; 
2013-06-26 18:04:57 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==> Parameters: CSN(String), 123456(String)
2013-06-26 18:04:57 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c84b7c4]
2013-06-26 18:04:57 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c84b7c4]
2013-06-26 18:04:57 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c84b7c4]
2013-06-26 18:04:57 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:04:57 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:07:38 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:07:38 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:07:38 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:10:22 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:10:22 INFO com.ts.web.CacheService.getClient(46) | get client from db forCSN
2013-06-26 18:10:22 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Creating a new SqlSession
2013-06-26 18:10:22 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68bae9bb]
2013-06-26 18:10:22 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | JDBC Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver] will be managed by Spring
2013-06-26 18:10:22 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ooo Using Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver]
2013-06-26 18:10:22 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==>  Preparing: select `id`, `name`, `group`, `identity`, `secret`, `status` from wallet_client where identity=? and secret=?; 
2013-06-26 18:10:22 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==> Parameters: CSN(String), 123456(String)
2013-06-26 18:10:22 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68bae9bb]
2013-06-26 18:10:22 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68bae9bb]
2013-06-26 18:10:22 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68bae9bb]
2013-06-26 18:10:22 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:10:22 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:13:54 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:13:54 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:13:54 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:15:10 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:15:10 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:15:10 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:16:04 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:16:04 INFO com.ts.web.CacheService.getClient(46) | get client from db forCSN
2013-06-26 18:16:04 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Creating a new SqlSession
2013-06-26 18:16:04 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210be7c2]
2013-06-26 18:16:04 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | JDBC Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver] will be managed by Spring
2013-06-26 18:16:04 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ooo Using Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver]
2013-06-26 18:16:04 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==>  Preparing: select `id`, `name`, `group`, `identity`, `secret`, `status` from wallet_client where identity=? and secret=?; 
2013-06-26 18:16:04 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==> Parameters: CSN(String), 123456(String)
2013-06-26 18:16:04 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210be7c2]
2013-06-26 18:16:04 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210be7c2]
2013-06-26 18:16:04 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210be7c2]
2013-06-26 18:16:04 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:16:04 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:19:32 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:19:32 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:19:32 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:20:12 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:20:12 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:20:12 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:20:35 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:20:35 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:20:35 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:24:13 DEBUG com.googlecode.ehcache.annotations.impl.ExpiredElementEvictor.run(103) | Evicted 0 elements from cache 'getGameCode' in 4 ms
2013-06-26 18:24:13 DEBUG com.googlecode.ehcache.annotations.impl.ExpiredElementEvictor.run(103) | Evicted 0 elements from cache 'session' in 0 ms
2013-06-26 18:24:13 DEBUG com.googlecode.ehcache.annotations.impl.ExpiredElementEvictor.run(103) | Evicted 0 elements from cache 'getExchangeRate' in 0 ms
2013-06-26 18:24:13 DEBUG com.googlecode.ehcache.annotations.impl.ExpiredElementEvictor.run(103) | Evicted 1 elements from cache 'getClient' in 0 ms
2013-06-26 18:24:13 DEBUG com.googlecode.ehcache.annotations.impl.ExpiredElementEvictor.run(103) | Evicted 0 elements from cache 'getCurrency' in 0 ms
2013-06-26 18:24:13 DEBUG com.googlecode.ehcache.annotations.impl.ExpiredElementEvictor.run(113) | Evicted 1 elements from 5 caches  in 12 ms
2013-06-26 18:24:41 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:24:41 INFO com.ts.web.CacheService.getClient(46) | get client from db forCSN
2013-06-26 18:24:41 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Creating a new SqlSession
2013-06-26 18:24:41 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@563d0987]
2013-06-26 18:24:41 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | JDBC Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver] will be managed by Spring
2013-06-26 18:24:41 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ooo Using Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver]
2013-06-26 18:24:41 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==>  Preparing: select `id`, `name`, `group`, `identity`, `secret`, `status` from wallet_client where identity=? and secret=?; 
2013-06-26 18:24:41 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==> Parameters: CSN(String), 123456(String)
2013-06-26 18:24:41 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@563d0987]
2013-06-26 18:24:41 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@563d0987]
2013-06-26 18:24:41 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@563d0987]
2013-06-26 18:24:41 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:24:41 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:34:38 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:34:38 INFO com.ts.web.CacheService.getClient(46) | get client from db forCSN
2013-06-26 18:34:38 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Creating a new SqlSession
2013-06-26 18:34:38 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fa74f6d]
2013-06-26 18:34:38 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | JDBC Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver] will be managed by Spring
2013-06-26 18:34:38 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ooo Using Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver]
2013-06-26 18:34:38 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==>  Preparing: select `id`, `name`, `group`, `identity`, `secret`, `status` from wallet_client where identity=? and secret=?; 
2013-06-26 18:34:38 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==> Parameters: CSN(String), 123456(String)
2013-06-26 18:34:38 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fa74f6d]
2013-06-26 18:34:38 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fa74f6d]
2013-06-26 18:34:38 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fa74f6d]
2013-06-26 18:34:38 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:34:38 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:35:58 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:35:58 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:35:58 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:37:36 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:37:36 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:37:36 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:39:45 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1551385917040325986' for invocation: ReflectiveMethodInvocation: public com.ts.domain.WalletClient com.ts.web.CacheService.getClient(java.lang.String,java.lang.String); target is of class [com.ts.web.CacheService]
2013-06-26 18:39:45 INFO com.ts.web.CacheService.getClient(46) | get client from db forCSN
2013-06-26 18:39:45 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Creating a new SqlSession
2013-06-26 18:39:45 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1254d032]
2013-06-26 18:39:45 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | JDBC Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver] will be managed by Spring
2013-06-26 18:39:45 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ooo Using Connection [jdbc:mysql://localhost/corewallet?autoReconnect=true, UserName=time_voyager@localhost, MySQL-AB JDBC Driver]
2013-06-26 18:39:45 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==>  Preparing: select `id`, `name`, `group`, `identity`, `secret`, `status` from wallet_client where identity=? and secret=?; 
2013-06-26 18:39:45 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | ==> Parameters: CSN(String), 123456(String)
2013-06-26 18:39:45 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1254d032]
2013-06-26 18:39:45 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1254d032]
2013-06-26 18:39:45 DEBUG org.apache.ibatis.logging.slf4j.Slf4jImpl.debug(47) | Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1254d032]
2013-06-26 18:39:45 INFO com.ts.web.BaseController.proxyValidate(78) | validate ticket result:<statusCode>00</statusCode>
<statusText>OK</statusText>
<memberId>testNew</memberId>
<testAccount>0</testAccount>
<currency>UUS</currency>
<language>en-US</language>
<country>CN</country>
<dob>01-01-1980</dob>
<requesterIp>220.220.220.111</requesterIp>
2013-06-26 18:39:45 DEBUG com.googlecode.ehcache.annotations.interceptor.EhCacheInterceptor.generateCacheKey(321) | Generated key '-1656456376265440' for invocation: ReflectiveMethodInvocation: public com.ts.domain.Currency com.ts.web.CacheService.getCurrencyByName(java.lang.String); target is of class [com.ts.web.CacheService]
